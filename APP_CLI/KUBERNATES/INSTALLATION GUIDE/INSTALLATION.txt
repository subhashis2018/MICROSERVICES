
master-node  :  launch-wizard-1
worker-node  :  launch-wizard-4

vpc : 172.31.0.0/16
**********************************************************************************************************************
PORT RANGE CONFIGURATION
**********************************************************************************************************************
Protocol	  Direction	   Port Range	     Purpose	                 Used By                      Accessible
TCP	          Inbound	    6443	        Kubernetes API server	         All                            0.0.0.0
TCP	          Inbound	    2379-2380	    etcd server client API	   kube-apiserver, etcd           172.31.0.0/16
TCP           Inbound	    10250	        Kubelet API	Self,          Control plane                  172.31.0.0/16
TCP	          Inbound	    10259	        kube-scheduler	               Self                       172.31.0.0/16
TCP	          Inbound	    10257	        kube-controller-manager	       Self                       172.31.0.0/16

Although etcd ports are included in control plane section, you can also host your own etcd cluster externally or on custom ports.

Worker node(s)
Protocol	   Direction	      Port Range	          Purpose	Used By                          Accessible       
TCP	Inbound	   10250	      Kubelet API	          Self, Control plane                       172.31.0.0/16
TCP	Inbound	   30000-32767	NodePort Services†	   All                                      0.0.0.0
**********************************************************************************************************************

After port config completion  run the command on each machine

sudo swapoff -a


Connect to all worker from master
****************************************************************
master-node :13.234.117.27

worker-node-1: ssh -i ~/.ssh/k8s-node.pem ubuntu@13.233.245.210
worker-node-2: ssh -i ~/.ssh/k8s-node.pem ubuntu@65.0.4.147


****************************************************************
CONFIGURE CLI PROMPT
****************************************************************
sudo vim /etc/hosts

13.234.117.27 master     
13.233.245.210 worker1
65.0.4.147 worker2

sudo hostnamectl set-hostname master
sudo hostnamectl set-hostname worker1
sudo hostnamectl set-hostname worker2

 nano /etc/network/interfaces


*********************************************************************************************************************************************************************
                                                              INSTALLING  CONTAINERD
*********************************************************************************************************************************************************************

       
cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay
br_netfilter
EOF


sudo modprobe overlay
sudo modprobe br_netfilter

# sysctl params required by setup, params persist across reboots

cat <<EOF | sudo tee /etc/sysctl.d/99-kubernates-crl.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF	  

# Apply sysctl params without reboot

sudo sysctl --system 
   
sudo apt-get update 

sudo apt-get -y install containerd

sudo mkdir -p /etc/containerd

containerd config default | sudo tee /etc/containerd/config.toml

sudo systemctl restart containerd

service containerd status

sysctl status containerd


*********************************************************************************************************************************************************************
                                                            INSTALLING KUBERNATES
*********************************************************************************************************************************************************************

to see all version of kubeadm : apt-cache madison kubeadm

touch kubernates.sh
vim kubernates.sh

chmod u+x kubernates.sh

sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl


sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update

sudo apt-get install -y kubelet=1.21.0-00  kubeadm=1.21.0-00 kubectl=1.21.0-00

sudo apt-mark hold kubelet kubeadm kubectl

sudo kubeadm init

mkdir -p ~/ .kube

sudo cp -i /etc/kubernetes/admin.conf ~/.kube/config

sudo chown $(id -u):$(id -g) $HOME/.kube/config


UNINSTALLING KUBERNETES
--------------------------

kubeadm reset
sudo apt-get purge kubeadm kubectl kubelet kubernetes-cni kube*   
sudo apt-get autoremove  
sudo rm -rf ~/.kube

And restart the computer

-----------------------------------------------------------

---------------------------------------------------------
                    END OF INSTALLATION
---------------------------------------------------------
